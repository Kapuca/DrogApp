{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/data/data.service.ts","webpack:///src/app/droge/droge.component.ts","webpack:///src/app/emergency/emergency.component.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/general/general.service.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/info/info.component.ts","webpack:///src/app/list/list.component.ts","webpack:///src/app/main/main.component.ts","webpack:///src/app/nasveti/nasveti.component.ts","webpack:///src/app/nav-header/nav-header.component.ts","webpack:///src/app/opozorila/opozorila.component.ts","webpack:///src/app/zapleti/zapleti.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DataService","http","url","endParam","type","tmp","get","pipe","arr","map","obj","console","log","providedIn","DrogeComponent","template","styles","EmergencyComponent","FooterComponent","GeneralService","tiles","colors","droge","nasveti","zapleti","emergency","info","opozorila","HeaderComponent","InfoComponent","ListComponent","ds","route","segments","join","subscribe","u","baseUrl","getData","data","items","MainComponent","gs","getTitles","getColor","NasvetiComponent","NavHeaderComponent","OpozorilaComponent","ZapletiComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './main/main.component';\nimport { InfoComponent } from './info/info.component';\nimport { EmergencyComponent } from './emergency/emergency.component';\nimport { OpozorilaComponent } from './opozorila/opozorila.component';\nimport { ListComponent } from './list/list.component';\nimport { DrogeComponent } from './droge/droge.component';\nimport { NasvetiComponent } from './nasveti/nasveti.component';\nimport { ZapletiComponent } from './zapleti/zapleti.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: MainComponent },\n  { path: 'info', component: InfoComponent },\n  { path: 'emergency', component: EmergencyComponent },\n  { path: 'opozorila', component: OpozorilaComponent },\n  {\n    path: 'droge', component: ListComponent,\n    children: [{ path: ':name', component: DrogeComponent }]\n  },\n  {\n    path: 'nasveti', component: ListComponent,\n    children: [{ path: ':name', component: NasvetiComponent }]\n  },\n  {\n    path: 'zapleti', component: ListComponent,\n    children: [{ path: ':name', component: ZapletiComponent }]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DrogApp';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { MainComponent } from './main/main.component';\nimport { InfoComponent } from './info/info.component';\nimport { OpozorilaComponent } from './opozorila/opozorila.component';\nimport { EmergencyComponent } from './emergency/emergency.component';\nimport { ListComponent } from './list/list.component';\nimport { DrogeComponent } from './droge/droge.component';\nimport { ZapletiComponent } from './zapleti/zapleti.component';\nimport { NasvetiComponent } from './nasveti/nasveti.component';\nimport { NavHeaderComponent } from './nav-header/nav-header.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    MainComponent,\n    InfoComponent,\n    OpozorilaComponent,\n    EmergencyComponent,\n    ListComponent,\n    DrogeComponent,\n    ZapletiComponent,\n    NasvetiComponent,\n    NavHeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private url = 'http://littlechick-design.com/CLIENT/DA-backend/';\n  private endParam = '.php?type=json';\n\n  constructor(private http: HttpClient) { }\n\n  getData(type: string): Observable<object[]>{\n    const tmp = this.http.get<object[]>( this.url + type + this.endParam).pipe(map(arr => {\n      return arr.map(obj => ({...obj, title: 'bob'}));\n    }));\n    console.log(typeof tmp, tmp);\n    return tmp;\n        // .success(function(data) {\n        //     console.log(type + \" fetched in home controller and stored to localstorage\")\n        //     window.localStorage.setItem(\"zapleti\", JSON.stringify(data));\n        // })\n        // .error(function(response) {\n        // });\n  }\n\n  getDrugs(): Observable<object[]> {\n    const tmp: Observable<object[]> = this.http.get<object[]>(this.url + 'droge' + this.endParam);\n    console.log('drfgettgf: ', typeof tmp);\n    return tmp;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-droge',\n  template: `\n    <p>\n      droge works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class DrogeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-emergency',\n  template: `\n    <p>\n      emergency works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class EmergencyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  template: `\n  <div>\n    <p routerLink=\"/opozorila\">\n      ZADNJE OPOZORILO\n    </p>\n  </div>\n  `,\n  styles: [\n    'div {background-color: black; padding: 5px;}',\n    'p {margin: 0; text-align: center; color: white; }'\n  ]\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneralService {\n\n  tiles = ['droge', 'nasveti', 'zapleti', 'emergency', 'info', 'opozorila'];\n  colors = {\n    droge: '#eed586',\n    nasveti: '#dd6c56',\n    zapleti: '#c63f55',\n    emergency: '#653a4b',\n    info: '#49d3a3',\n    opozorila: '#31656d'\n  };\n\n  constructor() { }\n\n  getTitles(){\n    return this.tiles;\n  }\n\n  getColor(title){\n    return this.colors[title];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  template: `\n  <div>\n    <p routerLink=\"/\">\n      DROG<strong>APP</strong>\n    </p>\n  </div>\n  `,\n  styles: [\n    'div {background-color: black; padding: 5px;}',\n    'p {margin: 0; text-align: center; color: white;}'\n  ]\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-info',\n  template: `\n    <p>\n      info works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class InfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { DataService } from '../data/data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-list',\n  template: `\n    <app-nav-header></app-nav-header>\n    <p *ngFor='let item of items'>\n      {{ item.dTITLE | uppercase }}\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ListComponent implements OnInit {\n\n  items: any;\n  url: Observable<string>;\n  baseUrl: string;\n\n  constructor( private ds: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.url = this.route.url.pipe(map(segments => segments.join(' / ')));\n    this.url.subscribe(u => {\n      this.baseUrl = u;\n      return u;\n    });\n    console.log('url:', this.url, this.baseUrl);\n    this.ds.getData(this.baseUrl).subscribe(data => {\n      this.items = data;\n      console.log('items:', typeof this.items, this.items);\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GeneralService } from '../general/general.service';\n\n@Component({\n  selector: 'app-main',\n  template: `\n    <div id='main'>\n      <div class='tile' *ngFor='let title of titles()' [routerLink]=\"['/', title]\" [style.background-color]='color(title)'>\n        <img [src]=\"['assets/img/home-' + title + '-txt.png']\"/>\n      </div>\n    </div>\n  `,\n  styles: [\n    '#main { display: grid;   grid-template-columns: auto auto; max-width: 100%; }',\n    '.tile { text-align: center;}',\n    'img { object-fit: scale-down; max-width: 100%;}',\n  ]\n})\nexport class MainComponent implements OnInit {\n\n\n  constructor(private gs: GeneralService) { }\n\n  ngOnInit(): void {\n  }\n\n  titles(){ return this.gs.getTitles(); }\n  color(title){ return this.gs.getColor(title); }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nasveti',\n  template: `\n    <p>\n      nasveti works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NasvetiComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { GeneralService } from '../general/general.service';\n\n@Component({\n  selector: 'app-nav-header',\n  template: `\n    <div [routerLink]=\"['../']\" [style.background-color]='color()'>\n      <img [src]=\"['assets/img/home-' + baseUrl + '.png']\"/>\n      <span>{{ url | async | uppercase}}</span>\n    </div>\n  `,\n  styles: [\n    'img { width:28px; height:28px; float:left; background-size: 28px 28px; background-repeat: no-repeat; margin:8px 15px; }',\n    'div { height: 45px }',\n  ]\n})\nexport class NavHeaderComponent implements OnInit {\n\n  url: Observable<string>;\n  baseUrl: string;\n\n  constructor(private route: ActivatedRoute, private gs: GeneralService) { }\n\n  ngOnInit(): void {\n    this.url = this.route.url.pipe(map(segments => segments.join(' / ')));\n    this.url.subscribe(u => {\n      this.baseUrl = u;\n      return u;\n    });\n//    console.log('url:', this.url, this.baseUrl);\n  }\n\n  color(){ return this.gs.getColor(this.baseUrl); }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-opozorila',\n  template: `\n    <p>\n      opozorila works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class OpozorilaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-zapleti',\n  template: `\n    <p>\n      zapleti works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ZapletiComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}